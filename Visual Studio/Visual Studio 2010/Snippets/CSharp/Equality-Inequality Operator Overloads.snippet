<?xml version="1.0" encoding="utf-8"?>
<CodeSnippet Format="1.0.0" xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<Header>
		<Title>Equality / Inequality Operator Overloads</Title>
		<Author>KBeckman</Author>
		<Description>This snippet provides method overloads for the equality (==) and inequality operator (!=).</Description>
		<SnippetTypes>
			<SnippetType>Expansion</SnippetType>
		</SnippetTypes>
	</Header>
	<Snippet>
		<Declarations>
			<Literal>
				<ID>ClassName</ID>
				<ToolTip>The type name to which the overload belongs.</ToolTip>
				<Default>NewClass</Default>
			</Literal>
			<Literal>
				<ID>CamelCaseParameter</ID>
				<ToolTip>A camel case parameter based on the owning type name.</ToolTip>
				<Default>newClass</Default>
			</Literal>
		</Declarations>
		<Code Language="csharp">
			<![CDATA[
#region Equality (==) / Inequality (!=) Operator Overloads

/// <summary>
/// Operator overload for '=='.
/// </summary>
/// <param name="$CamelCaseParameter$1">$ClassName$ object for comparison.</param>
/// <param name="$CamelCaseParameter$2">$ClassName$ object for comparison.</param>
/// <returns>Boolean value indicating whether or not the two $ClassName$ objects are equal.</returns>
public static bool operator ==($ClassName$ $CamelCaseParameter$1, $ClassName$ $CamelCaseParameter$2)
{
	return $CamelCaseParameter$1.Equals($CamelCaseParameter$2);
}
			
/// <summary>
/// Operator overload for '!='.
/// </summary>
/// <param name="$CamelCaseParameter$1">$ClassName$ object for comparison.</param>
/// <param name="$CamelCaseParameter$2">$ClassName$ object for comparison.</param>
/// <returns>Boolean value indicating whether or not the two $ClassName$ objects are not equal.</returns>
public static bool operator !=($ClassName$ $CamelCaseParameter$1, $ClassName$ $CamelCaseParameter$2)
{
	return !$CamelCaseParameter$1.Equals($CamelCaseParameter$2);
}

#endregion
			]]>
		</Code>
	</Snippet>
</CodeSnippet>