<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>IDisposable Implemenation</Title>
		</Header>
		<Snippet>
			<Code Language="CSharp">
				<![CDATA[
#region IDisposable Implementation

private bool _disposed;

/// <summary>
/// This is the public Dispose method to be invoked by any callers or instantiators of this class. This is also
/// the method invoked if an instance of this class is wrapped in a using statement.
/// </summary>
public void Dispose()
{
	//Remove object from finalization queue and prevent its finalization code from running twice...
	Dispose(true);
	GC.SuppressFinalize(this);
}

/// <summary>
/// This is the private Dispose method used to ensure the resource clean up duties are performed only once.
/// </summary>
/// <param name="disposing">Boolean value indicating whether or not to dispose of all object resources.</param>
protected void Dispose(bool disposing)
{
	if (!_disposed)
	{
		if (disposing)
		{
			//TODO: Clean up any member variables or resources here...
		}
		_disposed = true;
	}
}

#endregion
				]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>

